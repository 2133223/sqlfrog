{
  "funcName": "REGEXP_SUBSTR",
  "arguments": [
    {
      "argument": {
        "arguName": "source_string",
        "description": "A string expression, such as a column name, to be searched."
      }
    },
    {
      "argument": {
        "arguName": "pattern",
        "description": "A string literal that represents a SQL standard regular expression pattern."
      }
    },
    {
      "argument": {
        "arguName": "position",
        "description": "A positive integer that indicates the position within source_string to begin searching. The position is based on the number of characters, not bytes, so that multi-byte characters are counted as single characters. The default is 1. If position is less than 1, the search begins at the first character of source_string. If position is greater than the number of characters in source_string, the result is an empty string (\"\")."
      }
    },
    {
      "argument": {
        "arguName": "occurrence",
        "description": "A positive integer that indicates which occurrence of the pattern to use. REGEXP_SUBSTR skips the first occurrence -1 matches. The default is 1. If occurrence is less than 1 or greater than the number of characters in source_string, the search is ignored and the result is NULL."
      }
    },
    {
      "argument": {
        "arguName": "parameters",
        "description": "One or more string literals that indicate how the function matches the pattern. The possible values are the following: c – Perform case-sensitive matching. The default is to use case-sensitive matching. i – Perform case-insensitive matching. e – Extract a substring using a subexpression. If pattern includes a subexpression, REGEXP_SUBSTR matches a substring using the first subexpression in pattern. REGEXP_SUBSTR considers only the first subexpression; additional subexpressions are ignored. If the pattern doesn\u0027t have a subexpression, REGEXP_SUBSTR ignores the \u0027e\u0027 parameter."
      }
    }
  ],
  "returnType": "",
  "description": "Returns the characters extracted from a string by searching for a regular expression pattern. REGEXP_SUBSTR is similar to the SUBSTRING Function function, but lets you search a string for a regular expression pattern. For more information about regular expressions, see POSIX Operators.",
  "targetDBs": [
    "2012-12-01"
  ],
  "category": "String Functions",
  "ansiCompatible": "",
  "package": "",
  "docLink": "https://docs.aws.amazon.com/redshift/latest/dg/REGEXP_SUBSTR.html"
}