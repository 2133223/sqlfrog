{
  "funcName": "PERCENTILE_CONT",
  "arguments": [
    {
      "argument": {
        "arguName": "numeric_literal",
        "dataTypes": [],
        "description": "The percentile to compute. The value must range between 0.0 and 1.0."
      }
    },
    {
      "argument": {
        "arguName": "WITHIN GROUP ( ORDER BY order_by_expression [ ASC | DESC ])",
        "dataTypes": [
          "int",
          "bigint",
          "smallint",
          "tinyint",
          "numeric",
          "bit",
          "decimal",
          "smallmoney",
          "money",
          "float",
          "real"
        ],
        "description": "Specifies a list of numeric values to sort and compute the percentile over. Only one order_by_expression is allowed. The expression must evaluate to an exact numeric type (int, bigint, smallint, tinyint, numeric, bit, decimal, smallmoney, money) or an approximate numeric type (float, real). Other data types are not allowed. The default sort order is ascending."
      }
    },
    {
      "argument": {
        "arguName": "OVER ( \u0026lt;partition_by_clause\u0026gt; )",
        "dataTypes": [],
        "description": "Divides the result set produced by the FROM clause into partitions to which the percentile function is applied. For more information, see OVER Clause (Transact-SQL). The \u0026lt;ORDER BY clause\u0026gt; and \u0026lt;rows or range clause\u0026gt; of the OVER syntax cannot be specified in a PERCENTILE_CONT function."
      }
    }
  ],
  "returnType": "float(53)",
  "description": "Calculates a percentile based on a continuous distribution of the column value in SQL Server. The result is interpolated and might not be equal to any of the specific values in the column.",
  "targetDBs": [
    "SQL Server (starting with 2012)",
    "Azure SQL Database",
    "Azure SQL Data Warehouse",
    "Parallel Data Warehouse"
  ],
  "category": "Analytic",
  "ansiCompatible": "",
  "package": "",
  "docLink": "https://docs.microsoft.com/en-gb/sql/t-sql/functions/percentile-cont-transact-sql?view\u003dsql-server-2017",
  "sample": "USE AdventureWorks2012;  \n\nSELECT DISTINCT Name AS DepartmentName  \n      ,PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY ph.Rate)   \n                            OVER (PARTITION BY Name) AS MedianCont  \n      ,PERCENTILE_DISC(0.5) WITHIN GROUP (ORDER BY ph.Rate)   \n                            OVER (PARTITION BY Name) AS MedianDisc  \nFROM HumanResources.Department AS d  \nINNER JOIN HumanResources.EmployeeDepartmentHistory AS dh   \n    ON dh.DepartmentID \u003d d.DepartmentID  \nINNER JOIN HumanResources.EmployeePayHistory AS ph  \n    ON ph.BusinessEntityID \u003d dh.BusinessEntityID  \nWHERE dh.EndDate IS NULL;"
}